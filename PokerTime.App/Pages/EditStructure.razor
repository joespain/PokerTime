@page "/structures/{TournamentStructureId:int}"

@attribute [Authorize]

<section class="user-edit">
    @if (TSModel == null || TSModel.BlindLevels == null)
    {
        <div class="spinner"></div>
    }
    else
    {
        @if (!Saved)
        {
            <h3>Edit Tournament Structure</h3>

            <BSForm Model="@TSModel" OnValidSubmit="@HandleValidSubmit">
                
                <BSContainer>

                    <BSRow>
                        <BSCol>
                            <ObjectGraphDataAnnotationsValidator />
                            <ValidationSummary />
                        </BSCol>
                    </BSRow>

                    <BSRow>
                        <BSCol XS="12" SM="8" MD="6" Class="edit-structure-name-row">
                            <label for="StructureName" class="form-label">Structure Name: </label>
                            <BSInput id="StructureName" InputType="InputType.Text" @bind-Value="@TSModel.Name" placeholder="Enter Structure Name" Class="textbox"></BSInput>
                        </BSCol>
                    </BSRow>

                    @foreach (var blindLevel in TSModel.BlindLevels)
                    {

                    <BSRow Class="list-item blind-level-head">
                        <BSCol Class="edit-structure-level-no">
                            Blind Level @context@(TSModel.BlindLevels.IndexOf(blindLevel) + 1)
                        </BSCol>
                    </BSRow>

                    <BSRow Class="list-item blind-level-list-item">
                        <BSCol XS="6" SM="3" MD="2" Class="edit-structure-textbox">
                            <BSLabel for="SmallBlind" class="edit-structure-form-label">Small Blind:</BSLabel>
                            <BSInput InputType="InputType.Number" id="SmallBlind" @bind-Value="@blindLevel.SmallBlind" ValidateOnInput="true" class="textbox"></BSInput>
                        </BSCol>

                        <BSCol XS="6" SM="3" MD="2" Class="edit-structure-textbox">
                            <BSLabel for="BigBlind" class="edit-structure-form-label">Big Blind:</BSLabel>
                            <BSInput InputType="InputType.Number" id="BigBlind" @bind-Value="@blindLevel.BigBlind" ValidateOnInput="true" class="textbox"></BSInput>
                        </BSCol>

                        <BSCol XS="6" SM="3" MD="2" Class="edit-structure-textbox">
                            <BSLabel for="Ante" class="edit-structure-form-label">Ante:</BSLabel>
                            <BSInput InputType="InputType.Number" id="Ante" @bind-Value="@blindLevel.Ante" class="textbox"></BSInput>
                        </BSCol>

                        <BSCol XS="6" SM="3" MD="2" Class="edit-structure-textbox">
                            <BSLabel for="Minutes" class="edit-structure-form-label">Minutes:</BSLabel>
                            <BSInput InputType="InputType.Number" id="Minutes" @bind-Value="@blindLevel.Minutes" ValidateOnInput="true" class="textbox"></BSInput>
                        </BSCol>
                        <BSCol XS="12" SM="6" MD="4" Class="blind-level-item-btns">
                            @*<BSButton Color="Color.Success" Size="Size.ExtraSmall" IsOutline="true" @onclick="@(() => AddBlindLevel(blindLevel))" Class="list-item-btns">
                    <span class="oi oi-plus"></span> Add Level
                </BSButton>*@
                            <BSButton Color="Color.Danger" Size="Size.ExtraSmall" IsOutline="true" @onclick="@(() => DeleteBlindLevel(blindLevel))" Class="list-item-btns">
                                <span class="oi oi-x"></span> Delete
                            </BSButton>
                        </BSCol>
                    </BSRow>

                            }

                        
                        <BSRow>
                            <BSCol XS="4" Class="bottom-btn-container">
                                <BSButton Color="Color.Primary" @onclick="@(() => AddBlindLevel())" Class="bottom-btn">
                                    Add Blind Level
                                </BSButton>
                            </BSCol>
                        </BSRow>

                        <BSRow Class="bottom-btn-container">
                            <BSButton Color="Color.Primary" ButtonType="ButtonType.Submit" Class="structure-submit-buttons">Save</BSButton>
                            <BSButton Color="Color.Secondary" @onclick="@NavigateToStructures" IsOutline="true" Class="structure-submit-buttons">Cancel</BSButton>
                            <BSButton Color="Color.Danger" @onclick="@DeleteStructure" IsOutline="true" Class="structure-submit-buttons">Delete</BSButton>
                        </BSRow>

                    </BSContainer>
            </BSForm>

        }


        else
        {
            <div class="alert @StatusClass">@Message</div>
            <a class="btn btn-outline-primary" @onclick="@NavigateToStructures">Back to Tournament Structures</a>
        }
    }

</section>
