@page "/structures/{TournamentStructureId:int}"

@attribute [Authorize]

<section class="user-edit">
    @if (TSModel == null || TSModel.BlindLevels == null)
    {
        <div class="spinner"></div>
    }
    else
    {
        @if (!Saved)
        {
            <h3>Edit Structure</h3>

            <BSForm Model="@TSModel" OnValidSubmit="@HandleValidSubmit">
                <ObjectGraphDataAnnotationsValidator />
                <ValidationSummary />

                <BSContainer>
                    <BSRow>
                        <BSCol>
                            <label for="StructureName" class="form-label">Structure Name: </label>
                            <InputText id="StructureName" @bind-Value="@TSModel.Name" placeholder="Enter Structure Name"></InputText>
                        </BSCol>
                    </BSRow>
                </BSContainer>

                <BSTable IsHoverable="true">
                    <BSTableHead TableHeadType="TableHeadType.Dark">
                        <tr>
                            <th scope="col">Level #</th>
                            <th scope="col">Small Blind</th>
                            <th scope="col">Big Blind</th>
                            <th scope="col">Ante</th>
                            <th scope="col">Time (Mins)</th>
                            <th scope="col"></th>
                            <th scope="col"></th>
                        </tr>
                    </BSTableHead>

                    <tbody>
                        @foreach (var blindLevel in TSModel.BlindLevels)
                        {

                            <tr>
                                <td>
                                    @(TSModel.BlindLevels.IndexOf(blindLevel) + 1)
                                </td>
                                <td>
                                    <BSInput InputType="InputType.Number" id="SmallBlind" @bind-Value="@blindLevel.SmallBlind" ValidateOnChange="true" ValidateOnInput="true" class="textbox"></BSInput>
                                </td>

                                <td>
                                    <BSInput InputType="InputType.Number" id="BigBlind" @bind-Value="@blindLevel.BigBlind" ValidateOnChange="true" ValidateOnInput="true" class="textbox"></BSInput>
                                </td>

                                <td>
                                    <BSInput InputType="InputType.Number" id="Ante" @bind-Value="@blindLevel.Ante" class="textbox"></BSInput>
                                </td>

                                <td>
                                    <BSInput InputType="InputType.Number" id="Minutes" @bind-Value="@blindLevel.Minutes" ValidateOnChange="true" ValidateOnInput="true" class="textbox"></BSInput>
                                </td>
                                <td><BSButton Color="Color.Success" Size="Size.ExtraSmall" IsOutline="true" @onclick="@(() => AddBlindLevel(blindLevel))"><span class="oi oi-plus"></span></BSButton></td>
                                <td><BSButton Color="Color.Danger" Size="Size.ExtraSmall" IsOutline="true" @onclick="@(() => DeleteBlindLevel(blindLevel))"><span class="oi oi-x"></span></BSButton></td>
                            </tr>
                        }

                    </tbody>
                </BSTable>

                <div class="form-group row">
                    <BSButton Color="Color.Secondary" IsOutline="true" @onclick="@(() => AddBlindLevel())">
                        Add Blind Level
                    </BSButton>
                </div>

                <BSButton Color="Color.Primary" ButtonType="ButtonType.Submit">Save</BSButton>
                <BSButton Color="Color.Secondary" @onclick="@NavigateToStructures" IsOutline="true">Cancel</BSButton>
                <BSButton Color="Color.Danger" @onclick="@DeleteStructure" IsOutline="true">Delete</BSButton>
            </BSForm>




        }


        else
        {
            <div class="alert @StatusClass">@Message</div>
            <a class="btn btn-outline-primary" @onclick="@NavigateToStructures">Back to Tournament Structures</a>
        }
    }

</section>
