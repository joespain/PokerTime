@page "/events/inprogress/{EventId:guid}"
@inject IJSRuntime _jsRuntime

@attribute [Authorize]

<Styled @bind-Classname="@TimerStyle">
    font-size: 100pt;
    font-family: 'Teko';
    text-align: center;
    color: @TimerColor;
</Styled>

@if (IsTournamentRunning) { 
    <h3>@Structure.Name</h3>

    <div class="@TimerStyle">@TimeLeft.ToString("mm':'ss")</div>

    <div class="currentblind">Blinds: @CurrentBlindLevel.SmallBlind / @CurrentBlindLevel.BigBlind</div>
    <div class="currentblind">Ante: @CurrentBlindLevel.Ante</div>

    <p>&nbsp;</p>

    @if (NextBlindLevel != null)
    {
        <div class="nextblindlevel">Next Level:</div>
        <div class="nextblindlevel">Blinds: @NextBlindLevel.SmallBlind / @NextBlindLevel.BigBlind</div>
        <div class="nextblindlevel">Ante: @NextBlindLevel.Ante</div>
    }
    else
    {
        <div class="nextblindlevel">No More Blind Levels</div> 
    }
}

<div class="start-button-container">
    <BSButton ButtonType="ButtonType.Button" Color="Color.Active" IsOutline="true" @onclick="@(() => StartStopTimer())" Class="start-button">@ButtonName</BSButton>
</div>

<audio id="chime" src="../sounds/EndOfBlindLevel.ogg" />


