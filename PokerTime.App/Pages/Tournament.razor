@page "/tournament/{EventId:guid}"



<Styled @bind-Classname="@TimerStyle">
    font-size: 100pt;
    font-family: Teko;
    text-align: center;
    color: white;
    line-height: .95;
    color: @TimerColor;
</Styled>



@if (IsTournamentRunning && Tracker is not null) { 


    <div class="@TimerStyle">@TimeLeft.ToString("mm':'ss")</div>

    <div class="currentblind">Blinds: @CurrentBlindLevel.SmallBlind / @CurrentBlindLevel.BigBlind</div>
    <div class="currentblind">Ante: @CurrentBlindLevel.Ante</div>

    <p>&nbsp;</p>

    @if (NextBlindLevel is not null)
    {
        <div class="nextblindlevel">Next Level:</div>
        <div class="nextblindlevel">Blinds: @NextBlindLevel.SmallBlind / @NextBlindLevel.BigBlind</div>
        <div class="nextblindlevel">Ante: @NextBlindLevel.Ante</div>
    }
    else
    {
        <div class="nextblindlevel">No More Blind Levels</div>
    }

}
else
{
    <p>@Message</p>
}

<AuthorizeView>
    <Authorized>
        <div class="start-button-container">
            <BSButton ButtonType="ButtonType.Button" Color="Color.Active" IsOutline="true" @onclick="@(() => StartStopTimer())" Class="start-button">@ButtonName</BSButton>
        </div>

        <div class="end-tournament-button-container">
            <BSButton ButtonType="ButtonType.Button" Color="Color.Danger" IsOutline="true" @onclick="@(() => EndTournament())" Class="end-tournament-btn">End Tournament</BSButton>
        </div>
    </Authorized>    
</AuthorizeView>



<audio id="chime" src="../sounds/EndOfBlindLevel.ogg" />


